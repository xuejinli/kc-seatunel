#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
######
###### This config file is a demonstration of streaming processing in seatunnel config
######

env {
  job.mode = "BATCH"
  parallelism = 1
}

source {
  FakeSource {
      plugin_output = "fake"
    schema = {
      fields {
        pk_id = string
        name = string
        age = array<String>
      }
      primaryKey {
        name = "pk_id"
        columnNames = [pk_id]
      }
    }
    rows = [
      {
        kind = INSERT
        fields = ["id001", "zhangsan",[1,null]]
      }
    ]
  }
}

transform {
  Sql {
    plugin_input = "fake"
    plugin_output = "fake1"
    query = "SELECT * FROM fake LATERAL VIEW  EXPLODE(age) as age LATERAL VIEW  EXPLODE(ARRAY(1,1,null)) as num"
  }
}

sink{
  assert {
    rules =
      {
        row_rules = [
          {
            rule_type = MAX_ROW
            rule_value = 2
          },
          {
            rule_type = MIN_ROW
            rule_value = 2
          }
        ],
        field_rules = [
        {
          field_name = pk_id
          field_type = string
          field_value = [{equals_to = id001}]
        },
        {
          field_name = name
          field_type = string
          field_value = [{equals_to = zhangsan}]
        },
        {
          field_name = age
          field_type = "string"
          field_value = [{equals_to = 1}]
        },
        {
          field_name = num
          field_type = "int"
          field_value = [{equals_to = 1}]
        }
        ]
      }
  }
}
